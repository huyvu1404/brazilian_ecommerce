services:

  minio:
    hostname: minio_storage
    image: "minio/minio"
    container_name: minio_storage
    env_file:
      - .env
    # environment:
    #   - MINIO_ROOT_USER=minio
    #   - MINIO_ROOT_PASSWORD=minio123
    #   - MINIO_ACESS_KEY=minio
    #   - MINIO_SECRET_KEY=minio123
    ports:
      - "9001:9001"
      - "9000:9000"
    command: [ "server", "/data", "--console-address", ":9001"]
    volumes:
      - minio:/data
    networks:
      - storage_network

  mysql:
    hostname: mysql_db
    image: mysql:8.0
    container_name: mysql_db
    env_file:
      - .env  
    # environment:
    #   - MYSQL_ROOT_PASSWORD=123
    #   - MYSQL_DATABASE="abc"
    ports:
      - "3307:3306"
    healthcheck:
      test: mysqladmin ping -h localhost -u root --password=root
      interval: 5s
      timeout: 5s
      retries: 55
      start_period: 5s
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - storage_network
    
  postgres:
    hostname: postgres_db
    image: postgres:latest
    container_name: postgres_db
    ports:
      - "5433:5432"
    env_file:
      - .env
    volumes:
      - psql:/var/lib/postgresql/data
    networks:
      - storage_network

  ingest_data:
    build:
      context: ./ingest_data
      dockerfile: ./Dockerfile
    container_name: ingest_data
    env_file:
      - .env
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - storage_network

networks:
  storage_network:
    driver: bridge
    name: storage_network
  
volumes:
  mysql:
  minio:
  psql: